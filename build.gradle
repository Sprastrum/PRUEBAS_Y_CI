plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
	id("org.sonarqube") version "4.0.0.2929"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = "0.8.8"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport{
	reports{
		html.enabled(true)
		xml.enabled(true)
		csv.enabled(true)
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/dto/**",
					"**/entity/*",
					"**/model/*",
					"**/repository/*",
					"**/tienda/DemoApplication.class"
			])
		}))
	}
}

sonarqube {
	properties {
		property("sonar.projectName", "PRUEBAS_Y_CI")
		property("sonar.host.url", "http://localhost:9000")
		property("sonar.login", "admin")
		property("sonar.password", "123")
	}
}

test.finalizedBy(jacocoTestReport)

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'junit:junit:4.13.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
